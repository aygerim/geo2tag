#############################################################################
# Makefile for building: libwikigpsJson.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.7.0) on: ?? ???. 12 22:07:03 2011
# Project:  json.pro
# Template: lib
# Command: /usr/bin/qmake -o Makefile json.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++-4.5
DEFINES       = -DQT_SHARED -DDESKTOP_STYLE -DQT_CORE_LIB
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -fpermissive -Werror -DREDEFINE_QT_SIGNALS -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4 -I. -Iinc -I../common/inc -I.moc
LINK          = g++-4.5
LFLAGS        = -shared -Wl,-soname,libwikigpsJson.so.1
LIBS          = $(SUBLIBS)  -L/usr/lib -L/home/aygerim/project/geo2tag/src/lib -lcommon -lqjson -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = .obj/

####### Files

SOURCES       = src/ChannelListJSON.cpp \
		src/RSSFeedJSON.cpp \
		src/RSSFeedRequestJSON.cpp \
		src/SubscribeChannelJSON.cpp \
		src/JsonUser.cpp \
		src/JsonChannel.cpp \
		src/JsonTimeSlot.cpp \
		src/JsonDataMark.cpp \
		src/JsonSerializer.cpp \
		src/LoginRequestJSON.cpp \
		src/LoginResponseJSON.cpp \
		src/AddNewMarkRequestJSON.cpp \
		src/AddChannelRequestJSON.cpp \
		src/GetTimeSlotRequestJSON.cpp \
		src/GetTimeSlotResponseJSON.cpp \
		src/DefaultResponseJSON.cpp .moc/moc_LoginResponseJSON.cpp \
		.moc/moc_AddChannelRequestJSON.cpp \
		.moc/moc_GetTimeSlotRequestJSON.cpp \
		.moc/moc_GetTimeSlotResponseJSON.cpp
OBJECTS       = .obj/ChannelListJSON.o \
		.obj/RSSFeedJSON.o \
		.obj/RSSFeedRequestJSON.o \
		.obj/SubscribeChannelJSON.o \
		.obj/JsonUser.o \
		.obj/JsonChannel.o \
		.obj/JsonTimeSlot.o \
		.obj/JsonDataMark.o \
		.obj/JsonSerializer.o \
		.obj/LoginRequestJSON.o \
		.obj/LoginResponseJSON.o \
		.obj/AddNewMarkRequestJSON.o \
		.obj/AddChannelRequestJSON.o \
		.obj/GetTimeSlotRequestJSON.o \
		.obj/GetTimeSlotResponseJSON.o \
		.obj/DefaultResponseJSON.o \
		.obj/moc_LoginResponseJSON.o \
		.obj/moc_AddChannelRequestJSON.o \
		.obj/moc_GetTimeSlotRequestJSON.o \
		.obj/moc_GetTimeSlotResponseJSON.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../../config.pri \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		json.pro
QMAKE_TARGET  = wikigpsJson
DESTDIR       = ../lib/
TARGET        = libwikigpsJson.so.1.0.0
TARGETA       = ../lib/libwikigpsJson.a
TARGETD       = libwikigpsJson.so.1.0.0
TARGET0       = libwikigpsJson.so
TARGET1       = libwikigpsJson.so.1
TARGET2       = libwikigpsJson.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../lib/$(TARGET)

../lib/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../lib/ || $(MKDIR) ../lib/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../lib/$(TARGET)
	-$(DEL_FILE) ../lib/$(TARGET0)
	-$(DEL_FILE) ../lib/$(TARGET1)
	-$(DEL_FILE) ../lib/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../lib/



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: json.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../../config.pri \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile json.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
../../config.pri:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile json.pro

dist: 
	@$(CHK_DIR_EXISTS) .obj/wikigpsJson1.0.0 || $(MKDIR) .obj/wikigpsJson1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .obj/wikigpsJson1.0.0/ && $(COPY_FILE) --parents inc/ChannelListJSON.h inc/RSSFeedJSON.h inc/RSSFeedRequestJSON.h inc/SubscribeChannelJSON.h inc/UnsubscribeChannelRequestJSON.h inc/JsonUser.h inc/JsonDataMark.h inc/JsonChannel.h inc/JsonTimeSlot.h inc/JsonSerializer.h inc/LoginRequestJSON.h inc/LoginResponseJSON.h inc/AddUserRequestJSON.h inc/AddUserResponseJSON.h inc/AddNewMarkRequestJSON.h inc/AddNewMarkResponseJSON.h inc/SubscribeChannelResponseJSON.h inc/UnsubscribeChannelResponse.h inc/AddChannelRequestJSON.h inc/AddChannelResponseJSON.h inc/GetTimeSlotRequestJSON.h inc/GetTimeSlotResponseJSON.h inc/DefaultResponseJSON.h .obj/wikigpsJson1.0.0/ && $(COPY_FILE) --parents src/ChannelListJSON.cpp src/RSSFeedJSON.cpp src/RSSFeedRequestJSON.cpp src/SubscribeChannelJSON.cpp src/JsonUser.cpp src/JsonChannel.cpp src/JsonTimeSlot.cpp src/JsonDataMark.cpp src/JsonSerializer.cpp src/LoginRequestJSON.cpp src/LoginResponseJSON.cpp src/AddNewMarkRequestJSON.cpp src/AddChannelRequestJSON.cpp src/GetTimeSlotRequestJSON.cpp src/GetTimeSlotResponseJSON.cpp src/DefaultResponseJSON.cpp .obj/wikigpsJson1.0.0/ && (cd `dirname .obj/wikigpsJson1.0.0` && $(TAR) wikigpsJson1.0.0.tar wikigpsJson1.0.0 && $(COMPRESS) wikigpsJson1.0.0.tar) && $(MOVE) `dirname .obj/wikigpsJson1.0.0`/wikigpsJson1.0.0.tar.gz . && $(DEL_FILE) -r .obj/wikigpsJson1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../lib/$(TARGET) 
	-$(DEL_FILE) ../lib/$(TARGET0) ../lib/$(TARGET1) ../lib/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: .moc/moc_LoginResponseJSON.cpp .moc/moc_AddChannelRequestJSON.cpp .moc/moc_GetTimeSlotRequestJSON.cpp .moc/moc_GetTimeSlotResponseJSON.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) .moc/moc_LoginResponseJSON.cpp .moc/moc_AddChannelRequestJSON.cpp .moc/moc_GetTimeSlotRequestJSON.cpp .moc/moc_GetTimeSlotResponseJSON.cpp
.moc/moc_LoginResponseJSON.cpp: inc/JsonSerializer.h \
		inc/LoginResponseJSON.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) inc/LoginResponseJSON.h -o .moc/moc_LoginResponseJSON.cpp

.moc/moc_AddChannelRequestJSON.cpp: inc/JsonSerializer.h \
		inc/AddChannelRequestJSON.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) inc/AddChannelRequestJSON.h -o .moc/moc_AddChannelRequestJSON.cpp

.moc/moc_GetTimeSlotRequestJSON.cpp: inc/JsonSerializer.h \
		inc/GetTimeSlotRequestJSON.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) inc/GetTimeSlotRequestJSON.h -o .moc/moc_GetTimeSlotRequestJSON.cpp

.moc/moc_GetTimeSlotResponseJSON.cpp: inc/JsonSerializer.h \
		inc/GetTimeSlotResponseJSON.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) inc/GetTimeSlotResponseJSON.h -o .moc/moc_GetTimeSlotResponseJSON.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

.obj/ChannelListJSON.o: src/ChannelListJSON.cpp inc/ChannelListJSON.h \
		inc/JsonSerializer.h \
		inc/JsonChannel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ChannelListJSON.o src/ChannelListJSON.cpp

.obj/RSSFeedJSON.o: src/RSSFeedJSON.cpp inc/RSSFeedJSON.h \
		inc/JsonSerializer.h \
		inc/JsonUser.h \
		inc/JsonChannel.h \
		inc/JsonDataMark.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/RSSFeedJSON.o src/RSSFeedJSON.cpp

.obj/RSSFeedRequestJSON.o: src/RSSFeedRequestJSON.cpp inc/RSSFeedRequestJSON.h \
		inc/JsonSerializer.h \
		inc/JsonUser.h \
		inc/JsonChannel.h \
		inc/JsonDataMark.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/RSSFeedRequestJSON.o src/RSSFeedRequestJSON.cpp

.obj/SubscribeChannelJSON.o: src/SubscribeChannelJSON.cpp inc/SubscribeChannelJSON.h \
		inc/JsonSerializer.h \
		inc/JsonChannel.h \
		inc/JsonDataMark.h \
		inc/JsonUser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/SubscribeChannelJSON.o src/SubscribeChannelJSON.cpp

.obj/JsonUser.o: src/JsonUser.cpp inc/JsonUser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/JsonUser.o src/JsonUser.cpp

.obj/JsonChannel.o: src/JsonChannel.cpp inc/JsonChannel.h \
		inc/JsonDataMark.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/JsonChannel.o src/JsonChannel.cpp

.obj/JsonTimeSlot.o: src/JsonTimeSlot.cpp inc/JsonTimeSlot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/JsonTimeSlot.o src/JsonTimeSlot.cpp

.obj/JsonDataMark.o: src/JsonDataMark.cpp inc/JsonDataMark.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/JsonDataMark.o src/JsonDataMark.cpp

.obj/JsonSerializer.o: src/JsonSerializer.cpp inc/JsonSerializer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/JsonSerializer.o src/JsonSerializer.cpp

.obj/LoginRequestJSON.o: src/LoginRequestJSON.cpp inc/LoginRequestJSON.h \
		inc/JsonSerializer.h \
		inc/JsonUser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/LoginRequestJSON.o src/LoginRequestJSON.cpp

.obj/LoginResponseJSON.o: src/LoginResponseJSON.cpp inc/LoginResponseJSON.h \
		inc/JsonSerializer.h \
		inc/JsonUser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/LoginResponseJSON.o src/LoginResponseJSON.cpp

.obj/AddNewMarkRequestJSON.o: src/AddNewMarkRequestJSON.cpp inc/AddNewMarkRequestJSON.h \
		inc/JsonSerializer.h \
		inc/JsonChannel.h \
		inc/JsonDataMark.h \
		inc/JsonUser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/AddNewMarkRequestJSON.o src/AddNewMarkRequestJSON.cpp

.obj/AddChannelRequestJSON.o: src/AddChannelRequestJSON.cpp inc/AddChannelRequestJSON.h \
		inc/JsonSerializer.h \
		inc/JsonUser.h \
		inc/JsonChannel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/AddChannelRequestJSON.o src/AddChannelRequestJSON.cpp

.obj/GetTimeSlotRequestJSON.o: src/GetTimeSlotRequestJSON.cpp inc/GetTimeSlotRequestJSON.h \
		inc/JsonSerializer.h \
		inc/JsonChannel.h \
		inc/JsonDataMark.h \
		inc/JsonUser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/GetTimeSlotRequestJSON.o src/GetTimeSlotRequestJSON.cpp

.obj/GetTimeSlotResponseJSON.o: src/GetTimeSlotResponseJSON.cpp inc/GetTimeSlotResponseJSON.h \
		inc/JsonSerializer.h \
		inc/JsonUser.h \
		inc/JsonChannel.h \
		inc/JsonTimeSlot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/GetTimeSlotResponseJSON.o src/GetTimeSlotResponseJSON.cpp

.obj/DefaultResponseJSON.o: src/DefaultResponseJSON.cpp inc/DefaultResponseJSON.h \
		inc/JsonSerializer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/DefaultResponseJSON.o src/DefaultResponseJSON.cpp

.obj/moc_LoginResponseJSON.o: .moc/moc_LoginResponseJSON.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_LoginResponseJSON.o .moc/moc_LoginResponseJSON.cpp

.obj/moc_AddChannelRequestJSON.o: .moc/moc_AddChannelRequestJSON.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_AddChannelRequestJSON.o .moc/moc_AddChannelRequestJSON.cpp

.obj/moc_GetTimeSlotRequestJSON.o: .moc/moc_GetTimeSlotRequestJSON.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_GetTimeSlotRequestJSON.o .moc/moc_GetTimeSlotRequestJSON.cpp

.obj/moc_GetTimeSlotResponseJSON.o: .moc/moc_GetTimeSlotResponseJSON.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_GetTimeSlotResponseJSON.o .moc/moc_GetTimeSlotResponseJSON.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/lib/ || $(MKDIR) $(INSTALL_ROOT)/usr/lib/ 
	-$(INSTALL_PROGRAM) "../lib/$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET0)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET1)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET2)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET0)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET1)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET2)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/lib/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

